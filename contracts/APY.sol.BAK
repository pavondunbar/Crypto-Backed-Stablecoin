// SPDX-License-Identifier: MIT
pragma solidity ^0.8.7;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

contract APY {
    // This is the contract's ERC20 token
    ERC20 public token;

    // This variable stores the timestamp of when the contract was deployed
    uint256 public startTime;

    // This is the contract's constructor, which is called when the contract is deployed
    constructor(ERC20 _token) public {
        // Set the contract's token to the passed in ERC20 token
        token = _token;

        // Set the start time to the current timestamp
        startTime = block.timestamp;
    }

    // This is the function that pays out the 15% APY on the ERC20 token
    function payOut() public {
        // Check if 1 year has passed since the contract was deployed
        require(block.timestamp >= startTime + 365 days, "Payout not available until 1 year has passed.");

        // Calculate the amount of tokens to pay out based on the 25% APY rate
        uint256 amount = (token.totalSupply() * 15/100) / 365;

        // Transfer the calculated amount of tokens to the caller of this function
        token.transfer(msg.sender, amount);
    }
}

